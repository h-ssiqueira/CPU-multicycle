LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY CPU IS
	PORT(
            clock0, reset :IN   STD_LOGIC); 
END CPU;

    ARCHITECTURE behavior OF CPU IS
    COMPONENT memoria64x4 IS
        PORT(
            clock				:IN STD_LOGIC;
            address			:IN STD_LOGIC_VECTOR(7 DOWNTO 0); -- VALOR DE PC
            memdata			:OUT STD_LOGIC_VECTOR(15 DOWNTO 0) -- SAIDA DE 16 BITS PARA INSTRUCTION REGISTER
        );
    END COMPONENT;
    COMPONENT IRext IS
	PORT( 
            Mem              		            :IN STD_LOGIC_VECTOR (15 DOWNTO 0);
            IRWrite1, clock1, RegDst1           :IN STD_LOGIC;
         	Opcode                              :OUT STD_LOGIC_VECTOR (3 DOWNTO 0);
           	Rs,Rt,Rd                            :OUT STD_LOGIC_VECTOR (2 DOWNTO 0);
           	Immediate             	            :OUT STD_LOGIC_VECTOR (5 DOWNTO 0));
    END COMPONENT;
    COMPONENT REGS IS
	PORT( 	RegWrite,clock					:IN	STD_LOGIC;							-- sinal do controlador de escrita
			MovtoReg						:IN STD_LOGIC_VECTOR(1 DOWNTO 0);		-- Sinal do multiplexador de escrita
			Rs, Rt, Rd						:IN	STD_LOGIC_VECTOR(2 DOWNTO 0); 		-- Controle dos registradores a serem usados
			ExtImmediate,ALUout				:IN	STD_LOGIC_VECTOR(7 DOWNTO 0); 		-- Informações a serem escritas em um registrador
			R0, R1, R2, R3, R4, R5, R6, R7	:BUFFER STD_LOGIC_VECTOR(7 DOWNTO 0); 	-- Registradores
			RA, RB							:OUT STD_LOGIC_VECTOR(7 DOWNTO 0)); 	-- saída de informações dos registradores
    END COMPONENT;
    COMPONENT SignExtend IS
	PORT( 	Immediate		:IN	STD_LOGIC_VECTOR(5 DOWNTO 0);
			ExtImmediate	:OUT STD_LOGIC_VECTOR(7 DOWNTO 0));
    END COMPONENT;
    COMPONENT StateMachine IS
    PORT(   clock, reset                                        :IN STD_LOGIC;
            opcode                                              :IN STD_LOGIC_VECTOR(3 DOWNTO 0);
            PCWrite1, IRWrite1, REGWrite1, ALUSrcA1, RegDst1    :OUT STD_LOGIC;
            MovtoReg1, ALUSrcB1, ALUOp1                         :OUT STD_LOGIC_VECTOR(1 DOWNTO 0)    
    );
    END COMPONENT;
    COMPONENT ULAExt IS
	PORT( ALUSrcA1,clock1		:IN	STD_LOGIC;
			ALUop1,ALUSrcB1	    :IN	STD_LOGIC_VECTOR(1 DOWNTO 0);
			A1, B1,PC1,Imed1    :IN	STD_LOGIC_VECTOR(7 DOWNTO 0);
			ALUout1 		    :OUT STD_LOGIC_VECTOR(7 DOWNTO 0));
    END COMPONENT;
    BEGIN
    PROCESS(....)

    --STATE MACHINE
    -- MEMORY
	
	END behavior;
	